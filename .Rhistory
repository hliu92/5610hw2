library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Reds")[5],brewer.pal(7, "Blues")[5]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[5],brewer.pal(7, "Reds")[7]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[5],brewer.pal(7, "Reds")[6]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[5],brewer.pal(7, "Reds")[3]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[5],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[5],brewer.pal(7, "Reds")[5]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[5],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(scales)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
library(ggplot2)
library(RColorBrewer)
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
ggplot(index_table, aes(x = Weekday, y = Index)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales)) +
geom_boxplot() +
labs(y="Sales/Nightly Index")
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
View(index_table)
sum(index_table[,1])
## standardize index
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
bluestem$Index <- bluestem$Index*7/sum(index_table[,1])
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Index), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales, fill=Weekday)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales, fill= Promotion)) +
geom_boxplot() +
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4])) +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales, fill=Weekday)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales, fill= Promotion)) +
geom_boxplot() +
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4])) +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
scale_fill_manual(values=c(brewer.pal(7, "Blues")[1:7]) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales, fill=Weekday)) +
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
scale_colour_economist() +
labs(y="Nightly Index")
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(dplyr)
library(scales)
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
scale_colour_economist() +
labs(y="Nightly Index")
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
scale_fill_manual(values=brewer.pal(7, "Blues")[1:7]) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales, fill=Weekday)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
labs(color="") +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales, fill= Promotion)) +
geom_boxplot() +
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4])) +
labs(y="Sales/Nightly Index")
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
scale_fill_manual(values=brewer.pal(7, "Blues")[1:7]) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales, fill=Weekday)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
scale_fill_manual(values=brewer.pal(7, "Blues")[1:7]) +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales, fill= Promotion)) +
geom_boxplot() +
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4])) +
labs(y="Sales/Nightly Index")
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[1:8]
View(bluestem_1)
View(bluestem)
View(bluestem)
View(bluestem_1)
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[1:8,12]
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[1:8,12]
str(bluestem_1) #Sunday as the base dummy
add.fit <- lm(formula = 'Sales ~ .', data = bluestem_1)
add.fit <- lm(Sales ~ ., data = bluestem_1)
add.fit <- lm(Sales ~ , data = bluestem_1)
add.fit <- lm(Sales ~ ., data = bluestem_1)
add.fit <- lm(Sales ~ . , data = bluestem_1)
add.fit <- lm(formula = 'Sales ~ .', data = bluestem_1)
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[1:8,12]
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[c(1:8,12),]
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[,c(1:8,12)]
View(bluestem_1)
add.fit <- lm(formula = 'Sales ~ .', data = bluestem_1)
summary(add.fit)
add.fit$coefficients[2]
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[,c(1:8,12)]
str(bluestem_1) #Sunday as the base dummy
add.fit <- lm(formula = 'Sales ~ .', data = bluestem_1)
summary(add.fit)
add.fit$coefficients[2]
mtp.fit=lm(desSales ~ Promotion, data = bluestem)
summary(mtp.fit)
mtp.fit.t=lm(formula = 'desSales ~ Promotion + timeindex', data = bluestem)
summary(mtp.fit)
# The coefficient of Promotion stands for the boost in revenues without Weekday effect. Such boost would be amplified by the Nightly Index for Saturday.
mtp.fit$coefficients[2] * index_table$Index[which(index_table$Weekday=="Saturday")]
setwd("~/MSBA/ISOM5610/HW2")
library(readxl)
bluestem <- as.data.frame(read_excel("bluestem.xls", sheet=1))
bluestem[,2:9] <- lapply(bluestem[,2:9], factor)
colnames(bluestem)[1] <- "Sales"
colnames(bluestem)[10] <- "Index"
summary(bluestem)
#Adding the time index predictor
bluestem$Weekday <- factor(names(bluestem[3:9])[max.col(bluestem[3:9])], levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
stan <- rep(c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'),50)
st <- 1
timeindex <- c()
for (lp in 1:249){
timeindex[lp] <- st
while (stan[st] != bluestem$Weekday[lp]){
st <- st+1
timeindex[lp] <- st
}
}
bluestem$timeindex <- timeindex
#See if there is linear trend along the time line
fit0 <- lm(Sales ~ timeindex,data=bluestem)
summary(fit0)
plot(bluestem$timeindex,bluestem$Sales)
abline(fit0,col=2)
## standardize index
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
bluestem$Index <- bluestem$Index*7/sum(index_table[,1])
#Different Nightly Index for different Weekdays
index_table <- unique(bluestem[names(bluestem) %in% c("Weekday", "Index")])
#data processing
bluestem$desSales <- bluestem$Sales/bluestem$Index
library(ggplot2)
library(RColorBrewer)
ggplot(index_table, aes(x = Weekday, y = Index, fill=Weekday)) +
geom_bar(stat = "identity") +
geom_text(aes(label = sprintf("%0.2f", round(Index, digits = 2))), vjust=-0.6) +
scale_fill_manual(values=brewer.pal(7, "Blues")[1:7]) +
labs(y="Nightly Index")
#Sales on different Weekdays
ggplot(bluestem, aes(x = Weekday, y = Sales, fill=Weekday)) +
geom_boxplot() +
geom_point(data=subset(bluestem, Promotion==1), mapping=aes(color=Promotion), size=3) +
scale_fill_manual(values=brewer.pal(7, "Blues")[1:7]) +
scale_color_manual(labels = "With Promotion", values="red")
#Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = Sales, fill= Promotion)) +
geom_boxplot()+
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4]))
#De-seasonalized Sales with or without promotions
ggplot(bluestem, aes(x = Promotion, y = desSales, fill= Promotion)) +
geom_boxplot() +
scale_fill_manual(values=c(brewer.pal(7, "Blues")[4],brewer.pal(7, "Reds")[4])) +
labs(y="Sales/Nightly Index")
## in this chunk, ".t" means timeindex is added
bluestem_1 <- bluestem[,c(1:8,12)]
str(bluestem_1) #Sunday as the base dummy
add.fit <- lm(Sales ~ ., data = bluestem_1)
summary(add.fit)
add.fit$coefficients[2]
# Checking model assumptions
par(mfrow=c(2,2))
plot(add.fit)
plot(add.fit.t)
# Checking model assumptions
par(mfrow=c(2,2))
plot(add.fit)
# Checking multicollinearity for independent variables
library(HH)
vif(add.fit)
vif(add.fit.t)
index_table$Index[which(index_table$Weekday=="Saturday")]
index_table
mtp.fit <- lm(desSales ~ Promotion + timeindex, data = bluestem)
summary(mtp.fit)
# The coefficient of Promotion stands for the boost in revenues without Weekday effect. Such boost would be amplified by the Nightly Index for Saturday.
mtp.fit$coefficients[2] * index_table$Index[which(index_table$Weekday=="Saturday")]
# Checking model assumptions
par(mfrow=c(2,2))
plot(mtp.fit)
prolag1 <- rep(0,249)
prolag1[c(108,120)] <- 1
prolag1
prolag1 <- rep(0,249)
prolag1[c(108,120)] <- 1
prolag2 <- rep(0,249)
prolag2[c(55,98,110)] <- 1
bluestem$prolag1 <- prolag1
bluestem$prolag2 <- prolag2
prolag1 <- rep(0,249)
prolag1[c(108,120)] <- 1
prolag2 <- rep(0,249)
prolag2[c(55,98,110)] <- 1
bluestem$prolag1 <- prolag1
bluestem$prolag2 <- prolag2
mtp.fit2 <- lm(desSales ~ Promotion + timeindex + prolag1, data = bluestem)
summary(mtp.fit2)
mtp.fit3 <- lm(desSales ~ Promotion + timeindex + prolag1 + prolag2, data = bluestem)
summary(mtp.fit3)
prolag1 <- rep(0,249)
prolag1[c(108,120)] <- 1
prolag2 <- rep(0,249)
prolag2[c(54,97,109)] <- 1
bluestem$prolag1 <- prolag1
bluestem$prolag2 <- prolag2
mtp.fit2 <- lm(desSales ~ Promotion + timeindex + prolag1, data = bluestem)
summary(mtp.fit2)
mtp.fit3 <- lm(desSales ~ Promotion + timeindex + prolag1 + prolag2, data = bluestem)
summary(mtp.fit3)
bluestem$log_desSales <- log(bluestem$desSales)
mtp.fit.2=lm(log_desSales ~ Promotion+timeindex, data = bluestem)
summary(mtp.fit.2)
bluestem$log_desSales <- log(bluestem$desSales)
mtp.fit4 <- lm(log_desSales ~ Promotion+timeindex, data = bluestem)
summary(mtp.fit4)
mtp.fit5 <- lm(log_desSales ~ Promotion+timeindex+prolag1, data = bluestem)
summary(mtp.fit5)
mtp.fit6 <- lm(log_desSales ~ Promotion+timeindex+prolag1+prolag2, data = bluestem)
summary(mtp.fit6)
# Checking model assumptions
par(mfrow=c(2,2))
plot(mtp.fit.2)
mtp.fit.2$coefficients[2]
# Promotion increases sales without Weekday effect by 52.284%. Now factor in the Saturday effect in terms of % increase:
mtp.fit.2$coefficients[2] * ((index_table$Index[which(index_table$Weekday=="Saturday")] - 1)/1)
summary(mtp.fit5)
summary(mtp.fit6)
summary(mtp.fit5)
summary(mtp.fit6)
